#sessionInfo()
# Insert the function to *tidy up* the code when they are printed out
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
# Clean up the workspace before we begin
rm(list = ls())
# Set working directory
wd <- "~/Documents/Teach/Cal/w271/course-main-dev/live-session-files/week11"
setwd(wd)
# Load libraries
library(car)
library(dplyr)
library(Hmisc)
library(ggplot2)
library(lattice)
library(plm)
#sessionInfo()
# Insert the function to *tidy up* the code when they are printed out
library(knitr)
opts_chunk$set(tidy.opts=list(width.cutoff=60),tidy=TRUE)
# Clean up the workspace before we begin
rm(list = ls())
# Set working directory
wd <- "~/Documents/Teach/Cal/w271/course-main-dev/live-session-files/week11"
setwd(wd)
# Load libraries
library(car)
library(dplyr)
library(Hmisc)
library(ggplot2)
library(lattice)
library(plm)
# Person-level dataset
df <- read.table("tol_person.txt", sep=",", header=T)
str(df)
print(df)
table(df$male)
describe(df)
# Person-period level dataset
df2 <- read.table("tol_person_period.txt", sep=",", header=T)
str(df2)
print(df2[c(1:9, 76:80), ])
head(df2,10)
describe(df)
#View(df2)
# Bivariate correlation among tolerance scores assessed on five occassions
round(cor(df[ ,2:6]),2)
cor(df[ ,2:6])
corrplot::corrplot(cor(df[ ,2:6]))
str(df2)
# Some basic EDA
# Tolerance by age
describe(df2$tolerance)
g <- ggplot(df2, aes(as.factor(age), tolerance))
g + geom_boxplot() + geom_jitter(width = 0.2) + ggtitle("Tolerance by age")
# Tolaerance by gender
g <- ggplot(df2, aes(as.factor(male), tolerance))
g + geom_boxplot() + geom_jitter(width = 0.2) + ggtitle("Tolerance by gender")
# Tolaerance by age and gender
g <- ggplot(df2, aes(as.factor(age), tolerance))
g + geom_boxplot(aes(colour = as.factor(male))) + geom_jitter(width = 0.2) + ggtitle("Tolerance by age and gender")
# You repeat the same thing for exposure
# Note that since age and time and both deterministic function of time, using age would be the same as using time.
head(df2, 10)
xyplot(tolerance ~ age | id, data=df2, as.table=T)
# Smooth nonparametric trajectories superimposed on empirical growth plots.
xyplot(tolerance~age | id, data=df2,
prepanel = function(x, y) prepanel.loess(x, y, family="gaussian"),
xlab = "Age", ylab = "Tolerance",
panel = function(x, y) {
panel.xyplot(x, y)
panel.loess(x,y, family="gaussian") },
ylim=c(0, 4), as.table=T)
ggplot(df2, aes(age, tolerance)) +
geom_point() +
facet_grid(as.factor(id) ~ ., scales = "free", space = "free")
#plot of the raw data
interaction.plot(df2$age, df2$id, df2$tolerance)
g <- ggplot(df2, aes(age, tolerance, colour = as.factor(id)))
g + geom_line() + ggtitle("Growth Curve by ID")
df2
attach(df2)
# Task 1: Estimate individual-level regressions
by(df2, id, function(x) summary(lm(tolerance ~ time, data=x)))
lm.fit <- by(df2, id, function(x) fitted.values(lm(tolerance ~ time, data=x)))
lm.fit <- unlist(lm.fit)
# Plotting the estimated effect on tolerance by linear fit by id
interaction.plot(age, id, lm.fit, xlab="age", ylab="tolerance")
# Task 2: Estimate a pooled-OLS model
pooled.ols.lm <- lm(tolerance ~ age + exposure + male , data=df2)
summary(pooled.ols.lm)
plot(pooled.ols.lm)
residualPlot(pooled.ols.lm)
# Task 3: Estimate a first-difference model
str(df2)
df.panel <- pdata.frame(df2, index=c("id","time"), drop.index=TRUE, row.names=TRUE)
str(df.panel)
head(df.panel, 20)
#plm.fd1 <- plm(tolerance ~ exposure, data = df.panel,  model = "fd")
#summary(plm.fd1)
# Note that this will issue an error. Why?
plm.fd2 <- plm(tolerance ~ exposure*time, data = df.panel,  model = "fd")
summary(plm.fd2)
library(foreign)
library(gplots)
library(ggplot2)
library(stats)
library(Hmisc)
library(car)
# Import the data
df <- read.csv("data_wk12.csv", sep=",", header=T)
str(df)
describe(df)
table(df$year)
table(df$country)
table(df$year, df$country)
round(cor(df[ ,4:5]),3)
# Density
density_plot = function(data, plotvar, title) {
ggplot(data, aes(plotvar)) + geom_density() + ggtitle(title)
}
density_plot(df, df$yIndex, "yIndex")
density_plot(df, df$yIndex, "xIndex")
# Conditional Box-plot
conditional_plot = function(data, plotvar, condvar, title) {
g <- ggplot(data, aes(as.factor(condvar), plotvar))
g + geom_boxplot() + geom_jitter(width = 0.2) + ggtitle(title)
}
# yIndex by year (Heterogeineity across year)
conditional_plot(df, df$yIndex, df$year, "yIndex by year")
# yIndex by country (Heterogeineity across countries)
conditional_plot(df, df$yIndex, df$country, "yIndex by country")
# xIndex by year
conditional_plot(df, df$xIndex, df$year, "xIndex by year")
# xIndex by country
conditional_plot(df, df$xIndex, df$country, "xIndex by country")
scatterplot(yIndex ~  year|country, boxplots=FALSE, smooth=TRUE, data=df)
# Heterogeineity across countries
plotmeans(yIndex ~ country, main="Heterogeineity across countries", data=df)
plotmeans(yIndex ~ year, main="Heterogeineity across years", data=df)
#
coplot(yIndex ~ year|country, type="l", data=df)
coplot(xIndex ~ year|country, type="b", data=df)
plotmeans(yIndex ~ country, main="Heterogeineity across countries", data=df)
xyplot(yIndex ~ year | country, data=df, as.table=T)
xyplot(xIndex ~ year | country, data=df, as.table=T)
xyplot(yIndex ~ xIndex | country, data=df, as.table=T)
m1.ols <-lm(yIndex ~ xIndex, data=df)
summary(m1.ols)
#plot(m1.ols)
#residualPlot(m1.ols)
#Regular OLS regression does not consider heterogeneity across groups or time
plot(df$xIndex, df$yIndex, pch=19, xlab="xIndex", ylab="yIndEx")
abline(lm(df$yIndex ~ df$xIndex),lwd=3, col="red")
m1.ols <-lm(yIndex ~ xIndex, data=df)
summary(m1.ols)
plot(m1.ols)
#residualPlot(m1.ols)
#Regular OLS regression does not consider heterogeneity across groups or time
plot(df$xIndex, df$yIndex, pch=19, xlab="xIndex", ylab="yIndEx")
abline(lm(df$yIndex ~ df$xIndex),lwd=3, col="red")
library(plm)
model.fe.dum <-lm(yIndex ~ xIndex + factor(country)-1, data=df)
summary(model.fe.dum)
yhat <- model.fe.dum$fitted
model.fe<-plm(yIndex ~ xIndex, data=df, index=c("country", "year"), model="within")
summary(model.fe)
scatterplot(yhat ~ df$xIndex | df$country, boxplots=FALSE, xlab="xIndex", ylab="yhat",smooth=FALSE)
abline(lm(df$yIndex ~ df$xIndex),lwd=3, col="blue")
summary(df)
sd(df$yIndex)
sd(df$xIndex)
sd(df$xIndex)*4.9
sd(df$xIndex)*4.9/sd(df$yIndex)
library(plm)
model.fe.dum <-lm(yIndex ~ xIndex + factor(country)-1, data=df)
summary(model.fe.dum)
yhat <- model.fe.dum$fitted
model.fe<-plm(yIndex ~ xIndex, data=df, index=c("country", "year"), model="within")
summary(model.fe)
scatterplot(yhat ~ df$xIndex | df$country, boxplots=FALSE, xlab="xIndex", ylab="yhat",smooth=FALSE)
abline(lm(df$yIndex ~ df$xIndex),lwd=3, col="blue")
